
package webservice;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ServicioDepartamento", targetNamespace = "http://WebService/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ServicioDepartamento {


    /**
     * 
     * @return
     *     returns java.util.List<webservice.Reservas>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarReservas", targetNamespace = "http://WebService/", className = "webservice.ListarReservas")
    @ResponseWrapper(localName = "listarReservasResponse", targetNamespace = "http://WebService/", className = "webservice.ListarReservasResponse")
    @Action(input = "http://WebService/ServicioDepartamento/listarReservasRequest", output = "http://WebService/ServicioDepartamento/listarReservasResponse")
    public List<Reservas> listarReservas();

    /**
     * 
     * @param rut
     * @param idDepartamento
     * @param cantidadPersonas
     * @param fechaSalida
     * @param fechaReserva
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "agregarReserva", targetNamespace = "http://WebService/", className = "webservice.AgregarReserva")
    @ResponseWrapper(localName = "agregarReservaResponse", targetNamespace = "http://WebService/", className = "webservice.AgregarReservaResponse")
    @Action(input = "http://WebService/ServicioDepartamento/agregarReservaRequest", output = "http://WebService/ServicioDepartamento/agregarReservaResponse")
    public String agregarReserva(
        @WebParam(name = "fecha_reserva", targetNamespace = "")
        String fechaReserva,
        @WebParam(name = "cantidad_personas", targetNamespace = "")
        String cantidadPersonas,
        @WebParam(name = "fecha_salida", targetNamespace = "")
        String fechaSalida,
        @WebParam(name = "rut", targetNamespace = "")
        String rut,
        @WebParam(name = "id_departamento", targetNamespace = "")
        String idDepartamento);

    /**
     * 
     * @param descripcion
     * @param estado
     * @param producto
     * @param cantidad
     * @param idDepto
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "nuevoinventario", targetNamespace = "http://WebService/", className = "webservice.Nuevoinventario")
    @ResponseWrapper(localName = "nuevoinventarioResponse", targetNamespace = "http://WebService/", className = "webservice.NuevoinventarioResponse")
    @Action(input = "http://WebService/ServicioDepartamento/nuevoinventarioRequest", output = "http://WebService/ServicioDepartamento/nuevoinventarioResponse")
    public String nuevoinventario(
        @WebParam(name = "id_depto", targetNamespace = "")
        String idDepto,
        @WebParam(name = "producto", targetNamespace = "")
        String producto,
        @WebParam(name = "cantidad", targetNamespace = "")
        String cantidad,
        @WebParam(name = "estado", targetNamespace = "")
        String estado,
        @WebParam(name = "descripcion", targetNamespace = "")
        String descripcion);

    /**
     * 
     * @param id
     * @return
     *     returns webservice.Departamento
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarID", targetNamespace = "http://WebService/", className = "webservice.ListarID")
    @ResponseWrapper(localName = "listarIDResponse", targetNamespace = "http://WebService/", className = "webservice.ListarIDResponse")
    @Action(input = "http://WebService/ServicioDepartamento/listarIDRequest", output = "http://WebService/ServicioDepartamento/listarIDResponse")
    public Departamento listarID(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param descripcion
     * @param banos
     * @param fecha
     * @param ubicacion
     * @param habitaciones
     * @param valorarriendo
     * @param id
     * @param nombre
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Actualizar")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Actualizar", targetNamespace = "http://WebService/", className = "webservice.Actualizar")
    @ResponseWrapper(localName = "ActualizarResponse", targetNamespace = "http://WebService/", className = "webservice.ActualizarResponse")
    @Action(input = "http://WebService/ServicioDepartamento/ActualizarRequest", output = "http://WebService/ServicioDepartamento/ActualizarResponse")
    public String actualizar(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "ubicacion", targetNamespace = "")
        String ubicacion,
        @WebParam(name = "banos", targetNamespace = "")
        String banos,
        @WebParam(name = "habitaciones", targetNamespace = "")
        String habitaciones,
        @WebParam(name = "valorarriendo", targetNamespace = "")
        float valorarriendo,
        @WebParam(name = "descripcion", targetNamespace = "")
        String descripcion,
        @WebParam(name = "fecha", targetNamespace = "")
        String fecha);

    /**
     * 
     * @return
     *     returns java.util.List<webservice.Departamento>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listar", targetNamespace = "http://WebService/", className = "webservice.Listar")
    @ResponseWrapper(localName = "listarResponse", targetNamespace = "http://WebService/", className = "webservice.ListarResponse")
    @Action(input = "http://WebService/ServicioDepartamento/listarRequest", output = "http://WebService/ServicioDepartamento/listarResponse")
    public List<Departamento> listar();

    /**
     * 
     * @param descripcion
     * @param banos
     * @param fecha
     * @param ubicacion
     * @param habitaciones
     * @param valorarriendo
     * @param nombre
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "agregar", targetNamespace = "http://WebService/", className = "webservice.Agregar")
    @ResponseWrapper(localName = "agregarResponse", targetNamespace = "http://WebService/", className = "webservice.AgregarResponse")
    @Action(input = "http://WebService/ServicioDepartamento/agregarRequest", output = "http://WebService/ServicioDepartamento/agregarResponse")
    public String agregar(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "ubicacion", targetNamespace = "")
        String ubicacion,
        @WebParam(name = "banos", targetNamespace = "")
        String banos,
        @WebParam(name = "habitaciones", targetNamespace = "")
        String habitaciones,
        @WebParam(name = "valorarriendo", targetNamespace = "")
        float valorarriendo,
        @WebParam(name = "descripcion", targetNamespace = "")
        String descripcion,
        @WebParam(name = "fecha", targetNamespace = "")
        String fecha);

    /**
     * 
     * @param id
     * @return
     *     returns webservice.Departamento
     */
    @WebMethod(operationName = "Eliminar")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Eliminar", targetNamespace = "http://WebService/", className = "webservice.Eliminar")
    @ResponseWrapper(localName = "EliminarResponse", targetNamespace = "http://WebService/", className = "webservice.EliminarResponse")
    @Action(input = "http://WebService/ServicioDepartamento/EliminarRequest", output = "http://WebService/ServicioDepartamento/EliminarResponse")
    public Departamento eliminar(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @return
     *     returns java.util.List<webservice.Localidad>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarLocalidades", targetNamespace = "http://WebService/", className = "webservice.ListarLocalidades")
    @ResponseWrapper(localName = "listarLocalidadesResponse", targetNamespace = "http://WebService/", className = "webservice.ListarLocalidadesResponse")
    @Action(input = "http://WebService/ServicioDepartamento/listarLocalidadesRequest", output = "http://WebService/ServicioDepartamento/listarLocalidadesResponse")
    public List<Localidad> listarLocalidades();

    /**
     * 
     * @param nombreLocalidad
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "nuevalocalidad", targetNamespace = "http://WebService/", className = "webservice.Nuevalocalidad")
    @ResponseWrapper(localName = "nuevalocalidadResponse", targetNamespace = "http://WebService/", className = "webservice.NuevalocalidadResponse")
    @Action(input = "http://WebService/ServicioDepartamento/nuevalocalidadRequest", output = "http://WebService/ServicioDepartamento/nuevalocalidadResponse")
    public String nuevalocalidad(
        @WebParam(name = "nombre_localidad", targetNamespace = "")
        String nombreLocalidad);

}
